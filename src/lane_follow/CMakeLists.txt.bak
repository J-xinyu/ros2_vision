#1.声明cmake最低版本
cmake_minimum_required(VERSION 3.8)
#2.声明项目名称，后续可以使用${PROJECT_NAME}代替
project(lane_follow)
#3.声明编译器的C++标准 Use C++17 and C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 17)
endif()
#4.设置编译器的警告级别
if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()
#5.功能包依赖项
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(std_msgs REQUIRED)
#因此此时用的是原生的cv_bridge，因此需要配套原生的opencv使用
set(OpenCV_DIR /usr/lib/x86_64-linux-gnu/cmake/opencv4)
find_package(cv_bridge REQUIRED)
find_package(image_transport REQUIRED)
# find_package(OpenCV REQUIRED)
find_package(rclcpp_components REQUIRED)
#6.创建库或者是可执行文件
#6.1创建库文件
add_library(${PROJECT_NAME} SHARED
    src/lane_follow.cpp    
)
#共享头文件目录
target_include_directories(${PROJECT_NAME} PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>
  )
#添加库的依赖
ament_target_dependencies(${PROJECT_NAME}
  PUBLIC
  #库文件的.cpp里include了什么第三方库，下面就加什么
  #OpenCV#cv_bridge里已经包含了opencv的一些常用功能
  "cv_bridge"
#   "rclcpp" 若把这个注释掉了，那么lane_follow.cpp和.hpp中就不可以include rclcpp
)
#ament_target_dependencies对应在cmake中就是下面这个写法
# target_link_libraries(${PROJECT_NAME}
#   CUDA::cudart
#   rclcpp::rclcpp
#   cv_bridge::cv_bridge
#   ${TENSORRT_LIBRARIES}
# )

#6.2创建可执行文件
add_executable(${PROJECT_NAME}_node src/lane_follow_node.cpp)
# ament_target_dependencies类似cmake中的target_link_libraries，一些宏定义中没有的动态链接库需要自己用target_link_libraries去添加，比如说我们自己写的库
ament_target_dependencies(${PROJECT_NAME}_node
  #该可执行文件.cpp中include了什么第三方库，下面就加什么
  "rclcpp"
  "sensor_msgs"
  "std_msgs"
  "rclcpp_components"
  "image_transport"
)

install(TARGETS ${PROJECT_NAME}_node
  DESTINATION lib/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
